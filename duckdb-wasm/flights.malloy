--! styles flights.styles.json

source: carriers is duckdb.table('carriers.parquet') extend {
  measure: carrier_count is count()
}

source: airports is duckdb.table('airports.parquet') extend {
  measure: airport_count is count()
}

source: flights is duckdb.table('flights.parquet') extend {
  join_one: carriers on carrier=carriers.code
  join_one: dest is airports on destination=dest.code
  join_one: orig is airports on origin=orig.code

  measure:
    flight_count is count()
    total_distance is distance.sum()
    aircraft_count is count(tail_num)
    dest_count is dest.airport_count
    carrier_count is count(carrier)

  dimension: flight_length is  distance ?
      pick 'short' when <  200
      pick 'medium' when < 800
      pick 'regional' when < 1500
      else 'long'

  view: by_carrier is {
    group_by: carriers.nickname
    aggregate:
      flight_count
  }

  view: by_origin is {
    group_by: orig.code, orig.city
    aggregate:
      flight_count
      dest_count
      carrier_count
  }
}
